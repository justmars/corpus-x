{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#concept","title":"Concept","text":"<p>corpus-pax + corpus-base + statute-trees = converts raw <code>yaml</code>-based corpus repository to its database variant corpus-x. After constructing all of the required tables, it becomes possible to evaluate the raw data</p>"},{"location":"#mode","title":"Mode","text":"Order Time Instruction 1 ~6sec (if with test data) corpus-pax pre-requiste before <code>corpus-base</code> can work. 2 ~40min corpus-base pre-requiste before <code>corpus-x</code> can work. 3 ~70min If inclusion files not yet created, run script to generate. 4 ~30min Assuming inclusion files are already created, can populate the various tables under <code>corpus-x</code> 5 ~40 to ~60min Litestream local output <code>x.db</code> to AWS bucket"},{"location":"#build-from-corpus-base","title":"Build from corpus-base","text":"<p>Assuming step 3 above has already been completed as a separate process and <code>pax_</code> and <code>sc_</code> tables have already been added:</p> Python<pre><code>&gt;&gt;&gt; from corpus_x import setup_x\n&gt;&gt;&gt; from sqlpyd import Connection\n&gt;&gt;&gt; c = Connection(DatabasePath=\"x.db\", WAL=True)\n&gt;&gt;&gt; setup_x('x.db') # adds to the database in present working directory, takes ~2300 seconds or ~40 minutes\n</code></pre> <p>The produced <code>x.db</code> file can then be replicated to aws via litestream, which should take another hour.</p>"},{"location":"#from-local-files-to-db","title":"From Local Files to DB","text":"<p>See prior documentation for corpus-base tables.</p>"},{"location":"codes/","title":"Codifications","text":""},{"location":"codes/#codification-paths","title":"Codification path/s","text":"<p>All codifications are sourced from a parent <code>/codifications</code></p> <p>Each child folder of the parent is a category /codifications/<code>ra</code>, /codifications/<code>roc</code>, etc</p> <p>Each child folder of a category is the serial id of such category, e.g. /codifications/ra/<code>386</code></p> <p>Each file in the latter folder is named after its identifier, e.g. <code>mv-civil-v1.yaml</code></p>"},{"location":"codes/#codification-creation-and-population","title":"Codification creation and population","text":"<p>It takes about ~3 minutes to populate all the codification tables.</p> Python<pre><code>&gt;&gt;&gt; from corpus_x.statutes import Codification, CodeRow, Connection\n&gt;&gt;&gt; c = Connection(DatabasePath=\"x.db\", WAL=True)\n&gt;&gt;&gt; Codification.make_tables(c)\n&gt;&gt;&gt; Codification.add_rows(c)\n[\n'mv-2022-pd-603-modern-child-and-youth-welfare-code-v1',\n'mv-2022-pd-612-modern-insurance-code-v1',\n'mv-2022-pd-442-labor-code-of-the-philippines-v1',\n'mv-2022-bp-129-judiciary-reorganization-act-v1',\n'mv-2022-ca-146-modern-public-service-act-v1',\n'mv-2022-act-3815-revised-penal-code-of-the-philippines-v1',\n'mv-2022-ra-7160-local-government-code-v1',\n'mv-2022-ra-8491-modern-flag-code-v1',\n'mv-2022-ra-8293-intellectual-property-code-v1',\n'mv-2022-ra-7610-child-abuse-act-v1',\n'mv-2022-ra-11232-revised-corporation-code-of-the-philippines-v1',\n'mv-2022-ra-8424-the-tax-code-v1',\n'mv-2022-ra-9160-anti-money-laundering-act-v1',\n'mv-2022-ra-9485-modern-anti-red-tape-act-v1',\n'mv-2022-ra-8550-fisheries-code-v1',\n'mv-2022-ra-9344-juvenile-justice-and-welfare-act-of-2006-v1',\n'mv-2022-ra-7042-modern-foreign-investments-acts-v1',\n'mv-2022-ra-9165-comprehensive-dangerous-drugs-act-of-2002-v1',\n'mv-2022-ra-386-modern-civil-code-v1',\n'mv-2022-const-1987-the-1987-constitution-of-the-philippines-v1',\n'mv-2022-rule-am-19-10-20-sc-revised-rules-of-civil-procedure-v1',\n'mv-2022-rule-am-19-08-15-sc-revised-rules-on-evidence-roc-v1',\n'mv-2022-rule-am-00-5-03-sc-revised-rules-of-criminal-procedure-roc-v1',\n'mv-2022-roc-1964-special-proceedings-roc-v1',\n'mv-2022-roc-1964-legal-and-judicial-ethics-roc-v1',\n'mv-2022-eo-292-the-administrative-code-v1',\n'mv-2022-eo-209-the-family-code-of-the-philippines-v1'\n]\n</code></pre>"},{"location":"evaluation/","title":"Evaluation","text":""},{"location":"evaluation/#decision","title":"Decision","text":"Python<pre><code>&gt;&gt;&gt; from sqlpyd import Connection\n&gt;&gt;&gt; from corpus_x import get_decision\n&gt;&gt;&gt; case_pk = \"gr-l-63915-apr-24-1985-136-scra-27-220-phil-422\"\n&gt;&gt;&gt; case_detail = get_decision(Connection(DatabasePath=\"x.db\"), case_pk)\n&gt;&gt;&gt; print(case_detail)\n{\n'created': 1662986006.2967641,\n'modified': 1662986006.2967641,\n'title': 'Lorenzo M. Ta\u00f1ada, Abraham F. Sarmiento, and Movement Of Attorneys For Brotherhood, Integrity And Nationalism, Inc.  [MABINI], Petitioners, Vs. Hon. Juan C. Tuvera' x x x,\n'description': 'GR L-63915, Apr. 24, 1985, 136 SCRA 27, 220 Phil. 422',\n'date': '1985-04-24',\n'justice_id': 101,\n'per_curiam': 0,\n'composition': 'En Banc',\n'category': 'Decision',\n'author_list': [{'id': 'mv', 'display': 'Marcelino Veloso III', 'img': 'members-mv'}],\n'opinions_list': [\n{\n'opinion_id': 'c6812-100',\n'title': 'Concurring Opinion',\n'justice_id': 100,\n'text': x x x,\n'statutes': [],\n'unmatched_statutes': [],\n'decisions': [],\n'unmatched_decisions': []\n},\nx x x # different opinions with their respective text and citations\n{\n'opinion_id': 'c6812-main',\n'title': 'Ponencia',\n'justice_id': 101,\n'text': x x x,\n'statutes': [\n{\n'id': 'ra-386-june-18-1949',\n'official_title': 'An Act to Ordain and Institute the Civil Code of the Philippines',\n'serial_title': 'Republic Act No. 386',\n'statute_date': '1949-06-18'\n}\n],\n'unmatched_statutes': [{'statute_category': 'ca', 'statute_serial_id': '638'}], # this implies that there is no statute presently existing in the database having the above category and serial id\n'decisions': [ # each decision\n{\n'id': 'gr-l-52245-jan-22-1980-180-phil-369',\n'title': 'Patricio Dumlao, Romeo B. Igot, And Alfredo Salapantan, Jr., Petitioners, Vs. Commission On Elections, Respondent.',\n'description': 'GR L-52245, Jan. 22, 1980, 180 Phil. 369',\n'date': '1980-01-22'\n},\nx x x # each decision in the opinion can be linked\n],\n'unmatched_decisions': [\n{'docket': None, 'scra': None, 'phil': '45 Phil. 345', 'offg': None},\n{'docket': None, 'scra': '16 SCRA 151', 'phil': None, 'offg': None},\n{'docket': None, 'scra': '18 SCRA 924', 'phil': None, 'offg': None},\nx x x # this implies that there is no decision presently existing in the database having the citations itemized\n]\n}\n]\n}\n</code></pre>"},{"location":"evaluation/#codification","title":"Codification","text":"<p>With respect to a codification_id:</p> Python<pre><code>&gt;&gt;&gt; from sqlpyd import Connection\n&gt;&gt;&gt; from corpus_x.__main__ import get_codification\n&gt;&gt;&gt; code_pk = \"mv-2022-ra-386-modern-civil-code-v1\"\n&gt;&gt;&gt; c = Connection(DatabasePath=\"x.db\", WAL=True)\n&gt;&gt;&gt; code_detail = get_codification(c, code_pk)\n{ 'created': 1673686439.0847127,\n'modified': 1673686439.0847127,\n'title': 'Modern Civil Code',\n'description': 'A Codification of Republic Act No. 386, As Amended.',\n'date': '2022-10-01',\n'statute_category': 'ra',\n'statute_serial_id': '386',\n'statute_id': 'ra-386-june-18-1949',\n'statute_date': '1949-06-18',\n'statute_titles': [{'title': 'New Civil Code', 'category': 'alias'},\n{'title': 'Civil Code of 1950', 'category': 'alias'},\n{'title': 'Civil Code of the Philippines', 'category': 'short'},\n{'title': 'Republic Act No. 386', 'category': 'serial'},\n{'title': 'An Act to Ordain and Institute the Civil Code of the Philippines',\n'category': 'official'}],\n'units': [{'item': 'Modern Civil Code',  # this is the nested tree that can be styled via html / css / js\n'id': '1.',\n'units': [{'item': 'Container 1',\n'caption': 'Preliminary Title',\n'id': '1.1.',\n'units': [{'item': 'Chapter 1',\n'caption': 'Effect and Application of Laws',\n'id': '1.1.1.',\n'units': [{'item': 'Article 1',\n'content': 'This Act shall be known as the \"Civil Code of the Philippines.\" (n)',\n'id': '1.1.1.1.',\n'units': []},\n{'item': 'Article 2',\n'content': 'Laws shall take effect after fifteen days following the completion of their publication either in the Official Gazette or in a newspaper of general circulation in the Philippines, unless it is otherwise provided. (1a)',\n'id': '1.1.1.2.',\n}]}]}]}],\n'author_list': [{'id': 'mv', 'display': 'Marcelino Veloso III', 'img': 'members-mv'}],\n'event_statute_affectors': [{'id': 'ra-11057-august-17-2018',\n'serial_title': 'Republic Act No. 11057',\n'official_title': 'An Act Strengthening The Secured Transactions Legal Framework In The Philippines. Which Shall Provide For The Creation, Perfection, Determination Of Priority, Establishment Of A Centralized Notice Registry, And Enforcement Of Security Interests In Personal Property, And For Other Purposes',\n'statute_date': '2018-08-17'},\n{'id': 'ra-10172-august-15-2012',\n'serial_title': 'Republic Act No. 10172',\n'official_title': 'An Act Further Authorizing The City Or Municipal Civil Registrar Or The Consul General To Correct Clerical Or Typographical Errors In The Day And Month In The Date Of Birth Or Sex Of A Person Appearing In The Civil Register Without Need Of A Judicial Order, Amending For This Purpose Republic Act Numbered Ninety Forty-Eight',\n'statute_date': '2012-08-15'},\n...]\n}\n</code></pre>"},{"location":"flow/","title":"Flow","text":""},{"location":"flow/#local-files","title":"Local files","text":"<p>Download *.yaml files from repository:</p> <pre><code>flowchart LR\nrepo(((github/corpus))) --download---&gt; local(local machine)</code></pre>"},{"location":"flow/#prerequisites","title":"Prerequisites","text":"<pre><code>flowchart TD\ncorpus_pax--api---&gt;x\ncorpus_base--copy---&gt;x\nx(corpus-x)--&gt;db[(sqlite.db)]</code></pre>"},{"location":"flow/#inclusions","title":"Inclusions","text":"<pre><code>flowchart TD\nop_stat(statutes in opinions)&lt;--after prerequisites--&gt;x\nop_cite(citations in opinions)&lt;--after prerequisites--&gt;x\nx(corpus-x)--&gt;db[(sqlite.db)]</code></pre>"},{"location":"flow/#trees","title":"Trees","text":"<pre><code>flowchart TD\nstatutes--create trees--&gt;x\ncodifications--create trees--&gt;x\nx(corpus-x)--&gt;db[(sqlite.db)]</code></pre>"},{"location":"flow/#replication","title":"Replication","text":"<pre><code>flowchart TD\n  x(corpus-x)--&gt;db[(sqlite.db)]\n  db--litestream replicate--&gt;aws(((aws bucket)))</code></pre>"},{"location":"inclusions/","title":"Decision inclusions","text":""},{"location":"inclusions/#concept-of-inclusions","title":"Concept of inclusions","text":"<p>Each opinion declared via <code>corpus_base</code> will contain references to:</p> <ol> <li>statutes;</li> <li>citations</li> </ol> <p>We'll use these references by first generating an inclusion <code>yaml</code> file for each opinion to serve as future rows to <code>corpus_x</code>-related tables:</p> <ol> <li><code>opinion_statutes</code></li> <li><code>opinion_citations</code></li> </ol>"},{"location":"inclusions/#inclusion-paths","title":"Inclusion path/s","text":"<p>All decisions are sourced from a parent <code>/decisions</code></p> <p>Each child folder of the parent is one of 2 categories: (1) /decisions/<code>sc</code> and (2) /decisions/<code>legacy</code></p> <p>Each child folder of a category is a decision identifier, e.g. decisions/sc/<code>1234</code>; it contains a decision's content.</p> <p>The inclusion file for each decision will be stored in this identifier folder.</p>"},{"location":"inclusions/#creation-of-inclusion-files","title":"Creation of inclusion files","text":""},{"location":"inclusions/#populate-local-files","title":"Populate local files","text":"Python<pre><code>&gt;&gt;&gt; from sqlpyd import Connection\n&gt;&gt;&gt; c = Connection(DatabasePath='x.db', WAL=True) # assuming x.db is the file\n&gt;&gt;&gt; from corpus_x.inclusions import create_inclusion_files_from_db_opinions\n&gt;&gt;&gt; create_inclusion_files_from_db_opinions(c) # will use sc_tbl_opinions\n# Set inclusions... \u2501\u2501\u2501\u2501\u2501\u2501\u257a\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501  16% 1:10:21\n</code></pre> <p>It takes ~60-90 minutes to parse through 60k long form pieces of text.</p> <p>Note: it used to take 6 hours; the optimization of the codebase via <code>statute-patterns</code> has significantly cut down on the time.</p> <p>This process should be called whenever here is change in the opinions table.</p>"},{"location":"inclusions/#pull-from-local-files-to-database","title":"Pull from local files to database","text":"<p>We can now proceed to insert rows from the <code>inclusion.yaml</code> file to the proper tables.</p> <p>It takes about ~20 minutes to populate all the inclusion tables.</p> Python<pre><code>&gt;&gt;&gt; from corpus_x import Inclusion\n&gt;&gt;&gt; Inclusion.from_files_to_db(c)\n&gt;&gt;&gt; StatuteInOpinion.add_statutes(c)  # eta ~2 minutes to store 500 objects\n&gt;&gt;&gt; StatuteInOpinion.update_statute_ids(c)\n&gt;&gt;&gt; CitationInOpinion.update_decision_ids(c)\n</code></pre>"},{"location":"replication/","title":"Replication to AWS","text":""},{"location":"replication/#config-file","title":"Config file","text":"<p>View the <code>litestream.yml</code> which lists down the various env variables that need to be set:</p> var desc notes <code>LITESTREAM_ACCESS_KEY_ID</code> aws access id starts with <code>AKIA</code> <code>LITESTREAM_SECRET_ACCESS_KEY</code> aws secret key see password manager <code>REPLICA_URL</code> must have an aws s3 bucket s3://bucket/path <code>DB_FILE</code> the db path *.db that will be replicated to the aws s3 bucket"},{"location":"replication/#set-credentials-that-config-will-use","title":"Set credentials that config will use","text":"<p>Enter the shell and export the proper values:</p> Bash<pre><code>poetry shell\nexport DB_FILE=a-name-of-a-db.db\nexport LITESTREAM_ACCESS_KEY_ID=AKIAxxx\nexport LITESTREAM_SECRET_ACCESS_KEY=xxx\nexport REPLICA_URL=s3://bucket/path\n</code></pre>"},{"location":"replication/#use-config-to-litestream-local-db-to-aws-bucket","title":"Use config to litestream local db to aws bucket","text":"<p>Run the following replication command:</p> Bash Session<pre><code>litestream replicate -config litestream.yml\n</code></pre> <p>This will produce the following lines:</p> Bash Session<pre><code>litestream v0.3.9\ninitialized db: /path/to/db/x.db\nreplicating to: name=\"s3\" type=\"s3\" bucket=\"corpus-x\" path=\"db\" region=\"\" endpoint=\"\" sync-interval=1s\npath/to/db/x.db: sync: new generation \"xxxxxxxx\", no generation exists\n</code></pre>"},{"location":"replication/#monitor-upload","title":"Monitor upload","text":"<p>See replication / upload progress in MacOS's Activity Monitor / Network panel.</p> <p>Considering the size of the database, it will take sometime to upload.</p> <p>After the replication, the following line should appear in the console:</p> Bash Session<pre><code>path/to/db/x.db(s3): snapshot written xxx/00000000\n</code></pre>"},{"location":"replication/#check-successful-replication","title":"Check successful replication","text":"<p>View the aws s3 bucket and confirm existence of a new generation.</p>"},{"location":"statutes/","title":"Statutes","text":""},{"location":"statutes/#statute-paths","title":"Statute path/s","text":"<p>All statutes are sourced from a parent <code>/statutes</code></p> <p>Each child folder of the parent is a category /statutes/<code>ra</code>, /statutes/<code>roc</code>, etc</p> <p>Each child folder of a category is the identifier of the statute so in cases where variants are employed, can distinguish via a suffix integer, e.g. statutes/am/<code>00-5-03-sc-1</code> and  statutes/am/<code>00-5-03-sc-2</code>.</p>"},{"location":"statutes/#statute-creation-and-population","title":"Statute creation and population","text":"<p>It takes about 15 minutes to populate all the statute tables.</p> Python<pre><code>&gt;&gt;&gt; from corpus_x.statutes import Statute, StatuteFoundInUnit, Connection\n&gt;&gt;&gt; c = Connection(DatabasePath=\"x.db\", WAL=True)\n&gt;&gt;&gt; Statute.make_tables(c)\n&gt;&gt;&gt; Statute.add_rows(c)\n&gt;&gt;&gt; StatuteFoundInUnit.update_statute_ids(c)\n&lt;sqlite3.Cursor object at 0x10ca544d0&gt;\n</code></pre>"}]}